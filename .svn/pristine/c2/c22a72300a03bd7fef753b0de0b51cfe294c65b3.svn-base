Week #11: Signals and Networking 
Exam Review Question  
CS 241: Fall 2013 
These questions are provided to you to help you study material covered in CS 241 that may appear on the 
final exam.  These exact questions may or may not appear on the final exam, but the topics they cover will 
almost certainly be on the final exam. 
1. Consider the code below: 
void handler(int sig) { 
  printf("foo"); 
  while (1) { } 
} 
 
int main() { 
  signal(SIGINT, handler); 
  while (1) { } 
  return 0; 
} 
 
If Ctrl+C is pressed 5 times, how many times is “foo” printed out to the screen? 
 
2. Consider the code below:  
void handler(int sig) { printf("foo"); } 
 
int main() { 
  signal(SIGKILL, handler); 
  while (1) { } 
  return 0; 
} 
 
If you send three SIGKILLs to the process in a short period of time, what happens? 
 
3. Consider the code below: 
void handler(int sig) { 
  printf("foo"); 
} 
 
int main() { 
  signal(SIGINT, handler); 
  while (1) { } 
  return 0; 
} 
 
If Ctrl+C is pressed 5 times, how many times is “foo” printed out to the screen? 
 
4. What is I/O multiplexing?  Why is it useful? 
 
5. Given an array (arr) of size n, where each element of the array contains a file descriptor that 
contains data, write the code to set up an epoll to wait for a file descriptor to be ready. 
 
6. List the system calls needed in order to make a web server listen for incoming connections.  List 
the system calls needed in order for a client to connect to your web server. 
 
7. Briefly explain the following layers in the seven-layer OSI network model.  In explaining each 
layer, be sure to explain what each layer provides. 
a. Physical Layer 
b. Data Link Layer 
c. Network Layer, and what is a common protocol that is a network layer protocol? 
d. Transport Layer, and what is a common protocol that is a transport layer protocol? 
 
8. As a kernel developer, you decided that you would construct the full network packet (including 
the data link later, network layer, and transport later) and then compute a checksum of all the bits 
in the packet.  When the remote host receives your packet, it also computes a checksum of the 
entire packet it receives.  Will these two checksums match?  Why or why not? 
 
