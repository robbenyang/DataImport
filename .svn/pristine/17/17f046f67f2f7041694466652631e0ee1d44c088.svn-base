MP4 available, due 10/18, 11:59p. EC due 10/11, 7:59p.
TODAY:  traversals
Announcements
Traversal – scheme for visiting every node.
Traversal – scheme for visiting every node.
• At each node, two choices for direction (left, right)
• After both subtrees of a node are complete, move back up 
tree
• Each node is “visited” 3 times in a traversal. 
• Each of those visit times corresponds to a particular kind 
of traversal.
http://nova.umuc.edu/~jarc/idsv/lesson1.html
Traversals:
template<class T>
void binaryTree<T>::_______Order(treeNode * croot){
if (croot != null){
     ________Order(croot->left);
     ________Order(croot->right);
}
}
Traversals:
template<class T>
void binaryTree<T>::_______Order(treeNode * croot){
if (croot != null){
     ________Order(croot->left);
     ________Order(croot->right);
}
}
Traversals:
template<class T>
void binaryTree<T>::_______Order(treeNode * croot){
if (croot != null){
     ________Order(croot->left);
     ________Order(croot->right);
}
}
Traversals: A few mechanical questions…
What is the 2nd letter printed in an inOrder traversal of this tree?
In what position is C printed in a postOrder traversal of this tree?
Which traversal prints the data of the tree in ABC order?
Draw and label a tree containing 8 integers so that an inOrder traversal 
of the tree prints the numbers in order.
Draw and label a tree containing 8 integers so that a preOrder traversal 
of the tree prints the numbers in order.
A
B
C
ED
Traversals:  A few discussion questions…
template<class T>
void binaryTree<T>::preOrder(treeNode * croot){
if (croot != null){
     yell(croot->data);
     preOrder(croot->left);
     preOrder(croot->right);
}
}
What is running time?  
Is preOrder public or private? 
Traversals: a broader view…
template<class T>
treeNode * binaryTree<T>::copy(treeNode * croot){
}
Traversals: another broader view…
template<class T>
void binaryTree<T>::clear(treeNode * croot){
}
