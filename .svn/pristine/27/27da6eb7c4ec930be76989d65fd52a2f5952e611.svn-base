Data Mining:  
Concepts and Techniques 
 (3rd ed.) 
 
— Chapter 10 — 
Jiawei Han, Micheline Kamber, and Jian Pei 
University of Illinois at Urbana-Champaign & 
Simon Fraser University 
©2013 Han, Kamber & Pei.  All rights reserved. 
1 
 
3 
Chapter 10. Cluster Analysis: Basic 
Concepts and Methods 
 Cluster Analysis: Basic Concepts 
 Partitioning Methods 
 Hierarchical Methods 
 Density-Based Methods 
 Grid-Based Methods 
 Evaluation of Clustering 
 Summary 
4 
What is Cluster Analysis? 
 Cluster: A collection of data objects 
 similar (or related) to one another within the same group 
 dissimilar (or unrelated) to the objects in other groups 
 Cluster analysis (or clustering, data segmentation, …) 
 Finding similarities between data according to the 
characteristics found in the data and grouping similar 
data objects into clusters 
 Unsupervised learning: no predefined classes (i.e., learning 
by observations vs. learning by examples: supervised) 
 Typical applications 
 As a stand-alone tool to get insight into data distribution  
 As a preprocessing step for other algorithms 
Applications of Cluster Analysis 
 Data reduction 
 Summarization: Preprocessing for regression, PCA, 
classification, and association analysis 
 Compression: Image processing: vector quantization 
 Hypothesis generation and testing 
 Prediction based on groups 
 Cluster & find characteristics/patterns for each group 
 Finding K-nearest Neighbors 
 Localizing search to one or a small number of clusters 
 Outlier detection: Outliers are often viewed as those “far 
away” from any cluster 
 5 
6 
Clustering: Application Examples 
 Biology: taxonomy of living things: kingdom, phylum, class, order, 
family, genus and species 
 Information retrieval: document clustering 
 Land use: Identification of areas of similar land use in an earth 
observation database 
 Marketing: Help marketers discover distinct groups in their customer 
bases, and then use this knowledge to develop targeted marketing 
programs 
 City-planning: Identifying groups of houses according to their house 
type, value, and geographical location 
 Earth-quake studies: Observed earth quake epicenters should be 
clustered along continent faults 
 Climate: understanding earth climate, find patterns of atmospheric 
and ocean 
 Economic Science: market resarch 
Basic Steps to Develop a Clustering Task 
 Feature selection 
 Select info concerning the task of interest 
 Minimal information redundancy 
 Proximity measure 
 Similarity of two feature vectors 
 Clustering criterion 
 Expressed via a cost function or some rules 
 Clustering algorithms 
 Choice of algorithms 
 Validation of the results 
 Validation test (also, clustering tendency test) 
 Interpretation of the results 
 Integration with applications 
7 
Quality: What Is Good Clustering? 
 A good clustering method will produce high quality 
clusters 
 high intra-class similarity: cohesive within clusters 
 low inter-class similarity: distinctive between clusters 
 The quality of a clustering method depends on 
 the similarity measure used by the method  
 its implementation, and 
 Its ability to discover some or all of the hidden 
patterns 
8 
Measure the Quality of Clustering 
 Dissimilarity/Similarity metric 
 Similarity is expressed in terms of a distance function, 
typically metric: d(i, j) 
 The definitions of distance functions are usually rather 
different for interval-scaled, boolean, categorical, 
ordinal ratio, and vector variables 
 Weights should be associated with different variables 
based on applications and data semantics 
 Quality of clustering: 
 There is usually a separate “quality” function that 
measures the “goodness” of a cluster. 
 It is hard to define “similar enough” or “good enough”  
  The answer is typically highly subjective 
9 
Considerations for Cluster Analysis 
 Partitioning criteria 
 Single level vs. hierarchical partitioning (often, multi-level 
hierarchical partitioning is desirable) 
 Separation of clusters 
 Exclusive (e.g., one customer belongs to only one region) vs. non-
exclusive (e.g., one document may belong to more than one class) 
 Similarity measure 
 Distance-based (e.g., Euclidian, road network, vector)  vs. 
connectivity-based (e.g., density or contiguity) 
 Clustering space 
 Full space (often when low dimensional) vs. subspaces (often in 
high-dimensional clustering) 
10 
Requirements and Challenges 
 Scalability 
 Clustering all the data instead of only on samples 
 Ability to deal with different types of attributes 
 Numerical, binary, categorical, ordinal, linked, and mixture of 
these  
 Constraint-based clustering 
 User may give inputs on constraints 
 Use domain knowledge to determine input parameters 
 Interpretability and usability 
 Others  
 Discovery of clusters with arbitrary shape 
 Ability to deal with noisy data 
 Incremental clustering and insensitivity to input order 
 High dimensionality 
11 
Major Clustering Approaches (I) 
 Partitioning approach:  
 Construct various partitions and then evaluate them by some 
criterion, e.g., minimizing the sum of square errors 
 Typical methods: k-means, k-medoids, CLARANS 
 Hierarchical approach:  
 Create a hierarchical decomposition of the set of data (or objects) 
using some criterion 
 Typical methods: Diana, Agnes, BIRCH, CAMELEON 
 Density-based approach:  
 Based on connectivity and density functions 
 Typical methods: DBSACN, OPTICS, DenClue 
 Grid-based approach:  
 based on a multiple-level granularity structure 
 Typical methods: STING, WaveCluster, CLIQUE 
12 
Major Clustering Approaches (II) 
 Model-based:  
 A model is hypothesized for each of the clusters and tries to find 
the best fit of that model to each other 
 Typical methods: EM, SOM, COBWEB 
 Frequent pattern-based: 
 Based on the analysis of frequent patterns 
 Typical methods: p-Cluster 
 User-guided or constraint-based:  
 Clustering by considering user-specified or application-specific 
constraints 
 Typical methods: COD (obstacles), constrained clustering 
 Link-based clustering: 
 Objects are often linked together in various ways 
 Massive links can be used to cluster objects: SimRank, LinkClus 
13 
14 
Chapter 10. Cluster Analysis: Basic 
Concepts and Methods 
 Cluster Analysis: Basic Concepts 
 Partitioning Methods 
 Hierarchical Methods 
 Density-Based Methods 
 Grid-Based Methods 
 Evaluation of Clustering 
 Summary 
Partitioning Algorithms: Basic Concept 
 Partitioning method: Partitioning a database D of n objects into a set 
of k clusters, such that the sum of squared distances is minimized 
(where ci is the centroid or medoid of cluster Ci) 
 
 
 Given k, find a partition of k clusters that optimizes the chosen 
partitioning criterion 
 Global optimal: exhaustively enumerate all partitions 
 Heuristic methods: k-means and k-medoids algorithms 
 k-means (MacQueen’67, Lloyd’57/’82): Each cluster is represented 
by the center of the cluster 
 k-medoids or PAM (Partition around medoids) (Kaufman & 
Rousseeuw’87): Each cluster is represented by one of the objects 
in the cluster   
2
1 )),(( iCp
k
i cpdE i∈= ΣΣ=
15 
The K-Means Clustering Method  
 Given k, the k-means algorithm is implemented in 
four steps: 
 Partition objects into k nonempty subsets 
 Compute seed points as the centroids of the 
clusters of the current partitioning (the centroid is 
the center, i.e., mean point, of the cluster) 
 Assign each object to the cluster with the nearest 
seed point   
 Go back to Step 2, stop when the assignment does 
not change 
16 
An Example of K-Means Clustering 
K=2 
 
Arbitrarily 
partition 
objects into 
k groups 
Update the 
cluster 
centroids 
Update the 
cluster 
centroids 
 
Reassign  objects Loop if 
needed 
17 
The initial data set 
 Partition objects into k nonempty 
subsets 
 Repeat 
 Compute centroid (i.e., mean 
point) for each partition  
 Assign each object to the 
cluster of its nearest centroid   
 Until no change 
Comments on the K-Means Method 
 Strength: Efficient: O(tkn), where n is # objects, k is # clusters, and t  
is # iterations. Normally, k, t << n. 
 Comparing: PAM: O(k(n-k)2 ), CLARA: O(ks2 + k(n-k)) 
 Comment: Often terminates at a local optimal 
 Weakness 
 Applicable only to objects in a continuous n-dimensional space  
 Using the k-modes method for categorical data 
 In comparison, k-medoids can be applied to a wide range of 
data 
 Need to specify k, the number of clusters, in advance (there are 
ways to automatically determine the best k (see Hastie et al., 2009) 
 Sensitive to noisy data and outliers 
 Not suitable to discover clusters with non-convex shapes 
18 
Variations of the K-Means Method 
 Most of the variants of the k-means which differ in 
 Selection of the initial k means 
 Dissimilarity calculations 
 Strategies to calculate cluster means 
 Handling categorical data: k-modes 
 Replacing means of clusters with modes 
 Using new dissimilarity measures to deal with categorical objects 
 Using a frequency-based method to update modes of clusters 
 A mixture of categorical and numerical data: k-prototype method 
19 
What Is the Problem of the K-Means Method? 
 The k-means algorithm is sensitive to outliers ! 
 Since an object with an extremely large value may substantially 
distort the distribution of the data 
 K-Medoids:  Instead of taking the mean value of the object in a 
cluster as a reference point, medoids can be used, which is the most 
centrally located object in a cluster 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
0 1 2 3 4 5 6 7 8 9 10 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
0 1 2 3 4 5 6 7 8 9 10 
20 
21 
PAM: A Typical K-Medoids Algorithm 
0
1
2
3
4
5
6
7
8
9
10
0 1 2 3 4 5 6 7 8 9 10
Total Cost = 20 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
0 1 2 3 4 5 6 7 8 9 10 
K=2 
Arbitrary 
choose k 
object as 
initial 
medoids 
0
1
2
3
4
5
6
7
8
9
10
0 1 2 3 4 5 6 7 8 9 10
Assign 
each 
remainin
g object 
to 
nearest 
medoids 
Randomly select a 
nonmedoid object,Oramdom 
Compute 
total cost of 
swapping 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
0 1 2 3 4 5 6 7 8 9 10 
Total Cost = 26 
Swapping O 
and Oramdom  
If quality is 
improved. 
Do loop 
Until no 
change 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
0 1 2 3 4 5 6 7 8 9 10 
The K-Medoid Clustering Method 
 K-Medoids Clustering: Find representative objects (medoids) in clusters 
 PAM (Partitioning Around Medoids, Kaufmann & Rousseeuw 1987) 
 Starts from an initial set of medoids and iteratively replaces one 
of the medoids by one of the non-medoids if it improves the 
total distance of the resulting clustering 
 PAM works effectively for small data sets, but does not scale 
well for large data sets (due to the computational complexity) 
 Efficiency improvement on PAM 
 CLARA (Kaufmann & Rousseeuw, 1990): PAM on samples 
 CLARANS (Ng & Han, 1994): Randomized re-sampling 
22 
23 
Chapter 10. Cluster Analysis: Basic 
Concepts and Methods 
 Cluster Analysis: Basic Concepts 
 Partitioning Methods 
 Hierarchical Methods 
 Density-Based Methods 
 Grid-Based Methods 
 Evaluation of Clustering 
 Summary 
Hierarchical Clustering 
 Use distance matrix as clustering criteria.  This method 
does not require the number of clusters k as an input, 
but needs a termination condition  
Step 0 Step 1 Step 2 Step 3 Step 4 
b 
d 
c 
e 
a 
a b 
d e 
c d e 
a b c d e 
Step 4 Step 3 Step 2 Step 1 Step 0 
agglomerative 
(AGNES) 
divisive 
(DIANA) 
24 
AGNES (Agglomerative Nesting) 
 Introduced in Kaufmann and Rousseeuw (1990) 
 Implemented in statistical packages, e.g., Splus 
 Use the single-link method and the dissimilarity matrix   
 Merge nodes that have the least dissimilarity 
 Go on in a non-descending fashion 
 Eventually all nodes belong to the same cluster 
0
1
2
3
4
5
6
7
8
9
10
0 1 2 3 4 5 6 7 8 9 10
0
1
2
3
4
5
6
7
8
9
10
0 1 2 3 4 5 6 7 8 9 10
0
1
2
3
4
5
6
7
8
9
10
0 1 2 3 4 5 6 7 8 9 10
25 
Dendrogram: Shows How Clusters are Merged 
Decompose data objects into a several levels of nested partitioning (tree of 
clusters), called a dendrogram 
 
A clustering of the data objects is obtained by cutting the dendrogram at 
the desired level, then each connected component forms a cluster 
26 
DIANA (Divisive Analysis) 
 Introduced in Kaufmann and Rousseeuw (1990) 
 Implemented in statistical analysis packages, e.g., Splus 
 Inverse order of AGNES 
 Eventually each node forms a cluster on its own 
0
1
2
3
4
5
6
7
8
9
10
0 1 2 3 4 5 6 7 8 9 10
0
1
2
3
4
5
6
7
8
9
10
0 1 2 3 4 5 6 7 8 9 10
0
1
2
3
4
5
6
7
8
9
10
0 1 2 3 4 5 6 7 8 9 10
27 
Distance between 
Clusters 
 Single link:  smallest distance between an element in one cluster 
and an element in the other, i.e.,  dist(Ki, Kj) = min(tip, tjq) 
 Complete link: largest distance between an element in one cluster 
and an element in the other, i.e.,  dist(Ki, Kj) = max(tip, tjq) 
 Average: avg distance between an element in one cluster and an 
element in the other, i.e.,  dist(Ki, Kj) = avg(tip, tjq) 
 Centroid: distance between the centroids of two clusters, i.e.,  
dist(Ki, Kj) = dist(Ci, Cj) 
 Medoid: distance between the medoids of two clusters, i.e.,  dist(Ki, 
Kj) = dist(Mi, Mj) 
 Medoid: a chosen, centrally located object in the cluster 
X X 
28 
Centroid, Radius and Diameter of 
a Cluster (for numerical data sets) 
 Centroid:  the “middle” of a cluster 
 
 Radius: square root of average distance from any point 
of the cluster to its centroid 
 
 Diameter: square root of average mean squared 
distance between all pairs of points in the cluster 
N
tNi ipmC
)(1=Σ=
N
mcipt
N
i
mR
2)(
1
−
=
Σ
=
)1(
2)(
11
−
−
=
Σ
=
Σ
=
NN
iqtipt
N
i
N
i
mD
29 
X 
Extensions to Hierarchical Clustering 
 Major weakness of agglomerative clustering methods 
 Can never undo what was done previously 
 Do not scale well: time complexity of at least O(n2), 
where n is the number of total objects 
 Integration of hierarchical & distance-based clustering 
 BIRCH (1996): uses CF-tree and incrementally adjusts 
the quality of sub-clusters 
 CHAMELEON (1999): hierarchical clustering using 
dynamic modeling 
30 
BIRCH (Balanced Iterative Reducing 
and Clustering Using Hierarchies) 
 Zhang, Ramakrishnan & Livny, SIGMOD’96 
 Incrementally construct a CF (Clustering Feature) tree, a hierarchical 
data structure for multiphase clustering 
 Phase 1: scan DB to build an initial in-memory CF tree (a multi-level 
compression of the data that tries to preserve the inherent 
clustering structure of the data)   
 Phase 2: use an arbitrary clustering algorithm to cluster the leaf 
nodes of the CF-tree  
 Scales linearly: finds a good clustering with a single scan and improves 
the quality with a few additional scans 
 Weakness: handles only numeric data, and sensitive to the order of the 
data record 
31 
Clustering Feature Vector in BIRCH 
Clustering Feature (CF):  CF = (N, LS, SS) 
N: Number of data points 
LS: linear sum of N points: 
 
SS: square sum of N points 
0
1
2
3
4
5
6
7
8
9
10
0 1 2 3 4 5 6 7 8 9 10
CF = (5, (16,30),(54,190)) 
(3,4) 
(2,6) 
(4,5) 
(4,7) 
(3,8) 
∑
=
N
i
iX
1
2
1
∑
=
N
i
iX
32 
CF-Tree in BIRCH 
 Clustering feature:  
 Summary of the statistics for a given subcluster: the 0-th, 1st, 
and 2nd moments of the subcluster from the statistical point 
of view 
 Registers crucial measurements for computing cluster and 
utilizes storage efficiently 
A CF tree is a height-balanced tree that stores the clustering 
features for a hierarchical clustering  
 A nonleaf node in a tree has descendants or “children” 
 The nonleaf nodes store sums of the CFs of their children 
 A CF tree has two parameters 
 Branching factor: max # of children 
 Threshold: max diameter of sub-clusters stored at the leaf 
nodes 33 
The CF Tree Structure 
CF1 
child1 
CF3 
child3 
CF2 
child2 
CF6 
child6 
CF1 
child1 
CF3 
child3 
CF2 
child2 
CF5 
child5 
CF1 CF2 CF6 prev next CF1 CF2 CF4 prev next 
B = 7 
L = 6 
Root 
Non-leaf node 
Leaf node Leaf node 
34 
The Birch Algorithm 
 Cluster Diameter 
 
 
 For each point in the input 
 Find closest leaf entry 
 Add point to leaf entry and update CF  
 If entry diameter > max_diameter, then split leaf, and possibly 
parents 
 Algorithm is O(n) 
 Concerns 
 Sensitive to insertion order of data points 
 Since we fix the size of leaf nodes, so clusters may not be so 
natural 
 Clusters tend to be spherical given the radius and diameter 
measures 
∑ −
−
2)(
)1(
1
jxixnn
35 
CHAMELEON: Hierarchical Clustering Using 
Dynamic Modeling (1999) 
 CHAMELEON: G. Karypis, E. H. Han, and V. Kumar, 1999  
 Measures the similarity based on a dynamic model 
 Two clusters are merged only if the interconnectivity 
and closeness (proximity) between two clusters are 
high relative to the internal interconnectivity of the 
clusters and closeness of items within the clusters  
 Graph-based, and a two-phase algorithm 
1. Use a graph-partitioning algorithm: cluster objects into 
a large number of relatively small sub-clusters 
2. Use an agglomerative hierarchical clustering algorithm: 
find the genuine clusters by repeatedly combining 
these sub-clusters 
36 
KNN Graphs & Interconnectivity 
 k-nearest graphs from an original data in 2D: 
 
 
 
 
 EC{Ci ,Cj } :The absolute inter-connectivity between Ci and Cj: 
the sum of the weight of the edges that connect vertices in 
Ci to vertices in Cj  
 Internal inter-connectivity of a cluster Ci : the size of its 
min-cut bisector ECCi (i.e., the weighted sum of edges that 
partition the graph into two roughly equal parts) 
 Relative Inter-connectivity (RI):   
 
37 
Relative Closeness & Merge of Sub-Clusters 
 Relative closeness between a pair of clusters Ci and Cj : 
the absolute closeness between Ci and Cj normalized 
w.r.t. the internal closeness of the two clusters Ci and Cj  
 
 
           and           are the average weights of the edges that 
belong in the min-cut bisector of clusters Ci and Cj , respectively, 
and                is the average weight of the edges that connect 
vertices in Ci to vertices in Cj  
 Merge Sub-Clusters:   
 Merges only those pairs of clusters whose RI and RC are both 
above some user-specified thresholds  
 Merge those maximizing the function that combines RI and RC 
 
38 
 
 
 
Overall Framework of CHAMELEON 
Construct (K-NN) 
Sparse Graph Partition the Graph 
Merge Partition 
Final Clusters 
Data Set 
K-NN Graph 
P and q are connected if 
q is among the top k 
closest neighbors of p 
Relative interconnectivity:  
connectivity of c1 and c2 
over internal connectivity 
Relative closeness: 
closeness of c1 and c2 over 
internal closeness 
39 
40 
CHAMELEON (Clustering Complex Objects) 
Probabilistic Hierarchical Clustering 
 Algorithmic hierarchical clustering 
 Nontrivial to choose a good distance measure  
 Hard to handle missing attribute values 
 Optimization goal not clear: heuristic, local search 
 Probabilistic hierarchical clustering 
 Use probabilistic models to measure distances between clusters 
 Generative model: Regard the set of data objects to be clustered 
as a sample of the underlying data generation mechanism to be 
analyzed 
 Easy to understand, same efficiency as algorithmic agglomerative 
clustering method, can handle partially observed data 
 In practice, assume the generative models adopt common distribution 
functions, e.g., Gaussian distribution or Bernoulli distribution, governed 
by parameters 
41 
Generative Model 
 Given a set of 1-D points X = {x1, …, xn} for clustering 
analysis & assuming they are generated by a Gaussian 
distribution: 
 
 The probability that a point xi ∈ X is generated by the 
model 
 
 The likelihood that X is generated by the model: 
 
 
 The task of learning the generative model: find the 
parameters μ and σ2 such that the maximum likelihood 
42 
Gaussian Distribution 
 
43 
From wikipedia and http://home.dei.polimi.it 
Bean 
machine: 
drop ball 
with pins 
1-d 
Gaussian 
2-d 
Gaussian 
A Probabilistic Hierarchical Clustering Algorithm 
 For a set of objects partitioned into m clusters C1, . . . ,Cm, the quality 
can be measured by,  
 
where P() is the maximum likelihood 
 If we merge two clusters Cj1 and Cj2 into a cluster Cj1∪Cj2, then, the 
change in quality of the overall clustering is 
 
 
 
 
 Distance between clusters C1 and C2: 
 
 
 If dist(Ci, Cj) < 0, merge Ci and Cj 
44 
45 
Chapter 10. Cluster Analysis: Basic 
Concepts and Methods 
 Cluster Analysis: Basic Concepts 
 Partitioning Methods 
 Hierarchical Methods 
 Density-Based Methods 
 Grid-Based Methods 
 Evaluation of Clustering 
 Summary 
Density-Based Clustering Methods 
 Clustering based on density (local cluster criterion), such 
as density-connected points 
 Major features: 
 Discover clusters of arbitrary shape 
 Handle noise 
 One scan 
 Need density parameters as termination condition 
 Several interesting studies: 
 DBSCAN: Ester, et al. (KDD’96) 
 OPTICS: Ankerst, et al (SIGMOD’99). 
 DENCLUE: Hinneburg & D. Keim  (KDD’98) 
 CLIQUE: Agrawal, et al. (SIGMOD’98) (more grid-based) 
46 
Density-Based Clustering: Basic 
Concepts 
 Two parameters: 
 Eps: Maximum radius of the neighbourhood 
 MinPts: Minimum number of points in an Eps-
neighbourhood of that point 
 NEps(q): {p belongs to D | dist(p,q) ≤ Eps} 
 Directly density-reachable: A point p is directly 
density-reachable from a point q w.r.t. Eps, MinPts if 
  
 p belongs to NEps(q) 
 core point condition: 
              |NEps (q)| ≥ MinPts  
MinPts = 5 
Eps = 1 cm 
p 
q 
47 
Density-Reachable and Density-Connected 
 Density-reachable:  
 A point p is density-reachable from 
a point q w.r.t. Eps, MinPts if there 
is a chain of points p1, …, pn, p1 = 
q, pn = p such that pi+1 is directly 
density-reachable from pi  
 Density-connected 
 A point p is density-connected to a 
point q w.r.t. Eps, MinPts if there 
is a point o such that both, p and 
q are density-reachable from o 
w.r.t. Eps and MinPts 
p 
q 
p1 
p q 
o 
48 
DBSCAN: Density-Based Spatial 
Clustering of Applications with Noise 
 Relies on a density-based notion of cluster:  A cluster is 
defined as a maximal set of density-connected points 
 Discovers clusters of arbitrary shape in spatial databases 
with noise 
Core 
Border 
Outlier 
Eps = 1cm 
MinPts = 5 
49 
DBSCAN: The Algorithm 
 Arbitrary select a point p 
 Retrieve all points density-reachable from p w.r.t. Eps 
and MinPts 
 If p is a core point, a cluster is formed 
 If p is a border point, no points are density-reachable 
from p and DBSCAN visits the next point of the database 
 Continue the process until all of the points have been 
processed 
 If a spatial index is used, the computational complexity of DBSCAN is 
O(nlogn), where n is the number of database objects. Otherwise, the 
complexity is O(n2) 
50 
DBSCAN: Sensitive to Parameters 
51 
DBSCAN online Demo:  
http://webdocs.cs.ualberta.ca/~yaling/Cluster/Applet/Code/Cluster.html 
OPTICS:  A Cluster-Ordering Method (1999) 
 OPTICS: Ordering Points To Identify the Clustering 
Structure 
 Ankerst, Breunig, Kriegel, and Sander (SIGMOD’99) 
 Produces a special order of the database wrt its 
density-based clustering structure   
 This cluster-ordering contains info equiv to the density-
based clusterings corresponding to a broad range of 
parameter settings 
 Good for both automatic and interactive cluster analysis, 
including finding intrinsic clustering structure 
 Can be represented graphically or using visualization 
techniques 
52 
OPTICS: Some Extension from DBSCAN 
 Index-based:  k = # of dimensions, N: # of points 
 Complexity:  O(N*logN) 
 Core Distance of an object p: the smallest value ε such that 
the ε-neighborhood of p has at least MinPts objects 
Let Nε(p): ε-neighborhood of p, ε is a distance value 
Core-distanceε, MinPts(p) = Undefined if card(Nε(p)) < MinPts 
                            MinPts-distance(p), otherwise 
 Reachability Distance of object p from core object q is the 
min radius value that makes p density-reachable from q 
Reachability-distanceε, MinPts(p, q) = 
Undefined if q is not a core object 
max(core-distance(q), distance (q, p)), otherwise 
53 
Core Distance & Reachability Distance 
 
54 
εε
Reachability-
distance 
Cluster-order of the objects 
undefined 
ε ‘ 
55 
56 
Density-Based Clustering: OPTICS & Applications 
demo: http://www.dbs.informatik.uni-muenchen.de/Forschung/KDD/Clustering/OPTICS/Demo  
DENCLUE: Using Statistical Density 
Functions 
 DENsity-based CLUstEring by Hinneburg & Keim  (KDD’98) 
 Using statistical density functions: 
 
 
 
 Major features 
 Solid mathematical foundation 
 Good for data sets with large amounts of noise 
 Allows a compact mathematical description of arbitrarily shaped 
clusters in high-dimensional data sets 
 Significant faster than existing algorithm (e.g., DBSCAN) 
 But needs a large number of parameters 
f x y eGaussian
d x y
( , )
( , )
=
−
2
22σ ∑ =
−
=
N
i
xxd
D
Gaussian
i
exf
1
2
),(
2
2
)( σ
∑ =
−
⋅−=∇
N
i
xxd
ii
D
Gaussian
i
exxxxf
1
2
),(
2
2
)(),( σ
influence of y 
on x 
total influence 
on x 
gradient of x in 
the direction of 
xi 
57 
 Uses grid cells but only keeps information about grid cells that do 
actually contain data points and manages these cells in a tree-based 
access structure 
 Influence function: describes the impact of a data point within its 
neighborhood 
 Overall density of the data space can be calculated as the sum of the 
influence function of all data points 
 Clusters can be determined mathematically by identifying density 
attractors 
 Density attractors are local maximal of the overall density function 
 Center defined clusters: assign to each density attractor the points 
density attracted to it 
 Arbitrary shaped cluster: merge density attractors that are connected 
through paths of high density (> threshold) 
 
Denclue: Technical Essence 
58 
Density Attractor 
59 
Center-Defined and Arbitrary 
60 
61 
Chapter 10. Cluster Analysis: Basic 
Concepts and Methods 
 Cluster Analysis: Basic Concepts 
 Partitioning Methods 
 Hierarchical Methods 
 Density-Based Methods 
 Grid-Based Methods 
 Evaluation of Clustering 
 Summary 
Grid-Based Clustering Method  
 Using multi-resolution grid data structure 
 Several interesting methods 
 STING (a STatistical INformation Grid 
approach) by Wang, Yang and Muntz (1997) 
 CLIQUE: Agrawal, et al. (SIGMOD’98) 
 Both grid-based and subspace clustering 
 WaveCluster by Sheikholeslami, Chatterjee, 
and Zhang (VLDB’98) 
 A multi-resolution clustering approach 
using wavelet method 
62 
STING: A Statistical Information Grid 
Approach 
 Wang, Yang and Muntz (VLDB’97) 
 The spatial area is divided into rectangular cells 
 There are several levels of cells corresponding to different 
levels of resolution 
 
63 
 
The STING Clustering Method 
 Each cell at a high level is partitioned into a number of 
smaller cells in the next lower level 
 Statistical info of each cell is calculated and stored 
beforehand and is used to answer queries 
 Parameters of higher level cells can be easily calculated 
from parameters of lower level cell 
 count, mean, s, min, max  
 type of distribution—normal, uniform, etc. 
 Use a top-down approach to answer spatial data queries 
 Start from a pre-selected layer—typically with a small 
number of cells 
 For each cell in the current level compute the confidence 
interval 
64 
STING Algorithm and Its Analysis 
 Remove the irrelevant cells from further consideration 
 When finish examining the current layer, proceed to the 
next lower level  
 Repeat this process until the bottom layer is reached 
 Advantages: 
 Query-independent, easy to parallelize, incremental 
update 
 O(K), where K is the number of grid cells at the lowest 
level  
 Disadvantages: 
 All the cluster boundaries are either horizontal or 
vertical, and no diagonal boundary is detected 
65 
66 
CLIQUE (Clustering In QUEst)  
 Agrawal, Gehrke, Gunopulos, Raghavan (SIGMOD’98) 
 Automatically identifying subspaces of a high dimensional data space 
that allow better clustering than original space  
 CLIQUE can be considered as both density-based and grid-based 
 It partitions each dimension into the same number of equal length 
interval 
 It partitions an m-dimensional data space into non-overlapping 
rectangular units 
 A unit is dense if the fraction of total data points contained in the 
unit exceeds the input model parameter 
 A cluster is a maximal set of connected dense units within a 
subspace 
67 
CLIQUE: The Major Steps 
 Partition the data space and find the number of points that 
lie inside each cell of the partition. 
 Identify the subspaces that contain clusters using the 
Apriori principle 
 Identify clusters 
 Determine dense units in all subspaces of interests 
 Determine connected dense units in all subspaces of 
interests. 
 Generate minimal description for the clusters 
 Determine maximal regions that cover a cluster of 
connected dense units for each cluster 
 Determination of minimal cover for each cluster 
68 
Sa
la
ry
 
(1
0,
00
0)
 
20 30 40 50 60 
age 
5 
4 
3 
1 
2 
6 
7 
0 
20 30 40 50 60 
age 
5 
4 
3 
1 
2 
6 
7 
0 
Va
ca
tio
n
(w
ee
k)
 
age 
Va
ca
tio
n 
30 50 
τ = 3 
69 
Strength and Weakness of CLIQUE 
 Strength  
 automatically finds subspaces of the highest 
dimensionality such that high density clusters exist in 
those subspaces 
 insensitive to the order of records in input and does not 
presume some canonical data distribution 
 scales linearly with the size of input and has good 
scalability as the number of dimensions in the data 
increases 
 Weakness 
 The accuracy of the clustering result may be degraded 
at the expense of simplicity of the method 
70 
Chapter 10. Cluster Analysis: Basic 
Concepts and Methods 
 Cluster Analysis: Basic Concepts 
 Partitioning Methods 
 Hierarchical Methods 
 Density-Based Methods 
 Grid-Based Methods 
 Evaluation of Clustering 
 Summary 
Determine the Number of Clusters 
 Empirical method 
 # of clusters: k ≈√n/2 for a dataset of n points, e.g., n = 200, k = 10 
 Elbow method 
 Use the turning point in the curve of sum of within cluster variance 
w.r.t  the # of clusters 
 Cross validation method 
 Divide a given data set into m parts 
 Use m – 1 parts to obtain a clustering model 
 Use the remaining part to test the quality of the clustering 
 E.g., For each point in the test set, find the closest centroid, and 
use the sum of squared distance between all points in the test set 
and the closest centroids to measure how well the model fits the 
test set 
 For any k > 0, repeat it m times, compare the overall quality measure 
w.r.t. different k’s, and find # of clusters that fits the data the best 
71 
Measuring Clustering Quality 
 3 kinds of measures: External, internal and relative 
 External: supervised, employ criteria not inherent to the dataset 
 Compare a clustering against prior or expert-specified 
knowledge (i.e., the ground truth) using certain clustering 
quality measure 
 Internal: unsupervised, criteria derived from data itself 
 Evaluate the goodness of a clustering by considering how 
well the clusters are separated, and how compact the 
clusters are, e.g., Silhouette coefficient 
 Relative: directly compare different clusterings, usually those 
obtained via different parameter settings for the same algorithm 
72 
Measuring Clustering Quality: External Methods  
 Clustering quality measure: Q(C, T), for a clustering C 
given the ground truth T 
 Q is good if it satisfies the following 4 essential criteria 
 Cluster homogeneity: the purer, the better 
 Cluster completeness: should assign objects belong to 
the same category in the ground truth to the same 
cluster 
 Rag bag: putting a heterogeneous object into a pure 
cluster should be penalized more than putting it into a 
rag bag (i.e., “miscellaneous” or “other” category) 
 Small cluster preservation: splitting a small category 
into pieces is more harmful than splitting a large 
category into pieces 
73 
Some Commonly Used External Measures 
 Matching-based measures 
 Purity, maximum matching, F-measure 
 Entropy-Based Measures 
 Conditional entropy, normalized mutual 
information (NMI), variation of information 
 Pair-wise measures 
 Four possibilities: True positive (TP), FN, FP, TN 
 Jaccard coefficient, Rand statistic, Fowlkes-
Mallow measure 
 Correlation measures 
 Discretized Huber static, normalized discretized 
Huber static 
74 
Ground truth partitioning T1 T2 
Cluster C1 Cluster C2 
Entropy-Based Measure (I): 
Conditional Entropy 
 Entropy of clustering C: 
 Entropy of partitioning T: 
 Entropy of T w.r.t. cluster Ci: 
 
 Conditional entropy of T  
w.r.t. clustering C: 
 
 The more a cluster’s members are split into different 
partitions, the higher the conditional entropy 
 For a perfect clustering, the conditional entropy value is 0, 
where the worst possible conditional entropy value is log k 
75 
Entropy-Based Measure (II): 
Normalized mutual information (NMI) 
 Mutual information: quantify the amount of shared info between 
the clustering C and partitioning T: 
 
 
It measures the dependency between the observed joint probability pij 
of C and T, and the expected joint probability pCi * pTj under the 
independence assumption 
When C and T are independent, pij = pCi * pTj, I(C, T) = 0.  However, 
there is no upper bound on the mutual information 
 Normalized mutual information (NMI) 
 
 
 
Value range of NMI: [0,1].  Value close to 1 indicates a good clustering 
76 
77 
Chapter 10. Cluster Analysis: Basic 
Concepts and Methods 
 Cluster Analysis: Basic Concepts 
 Partitioning Methods 
 Hierarchical Methods 
 Density-Based Methods 
 Grid-Based Methods 
 Evaluation of Clustering 
 Summary 
Summary 
 Cluster analysis groups objects based on their similarity  and has 
wide applications 
 Measure of similarity can be computed for various types of data 
 Clustering algorithms can be categorized into partitioning methods, 
hierarchical methods, density-based methods, grid-based methods, 
and model-based methods 
 K-means and K-medoids algorithms are popular partitioning-based 
clustering algorithms 
 Birch and Chameleon are interesting hierarchical clustering algorithms, 
and there are also probabilistic hierarchical clustering algorithms 
 DBSCAN, OPTICS, and DENCLU are interesting density-based 
algorithms 
 STING and CLIQUE are grid-based methods, where CLIQUE is also a 
subspace clustering algorithm 
 Quality of clustering results can be evaluated in various ways  
78 
79 
 80 
81 
CS512-Spring 2011: An Introduction 
 Coverage 
 Cluster Analysis: Chapter 11 
 Outlier Detection: Chapter 12  
 Mining Sequence Data: BK2: Chapter 8 
 Mining Graphs Data: BK2: Chapter 9 
 Social and Information Network Analysis 
 BK2: Chapter 9 
 Partial coverage: Mark Newman: “Networks: An Introduction”, Oxford U., 
2010 
 Scattered coverage: Easley and Kleinberg, “Networks, Crowds, and Markets: 
Reasoning About a Highly Connected World”, Cambridge U., 2010 
 Recent research papers 
 Mining Data Streams: BK2: Chapter 8 
 Requirements 
 One research project 
 One class presentation (15 minutes) 
 Two homeworks (no programming assignment) 
 Two midterm exams (no final exam) 
References (1) 
 R. Agrawal, J. Gehrke, D. Gunopulos, and P. Raghavan. Automatic subspace 
clustering of high dimensional data for data mining applications. SIGMOD'98 
 M. R. Anderberg. Cluster Analysis for Applications. Academic Press, 1973. 
 M. Ankerst, M. Breunig, H.-P. Kriegel, and J. Sander.  Optics: Ordering points 
to identify the clustering structure, SIGMOD’99. 
 Beil F., Ester M., Xu X.: "Frequent Term-Based Text Clustering", KDD'02 
 M. M. Breunig, H.-P. Kriegel, R. Ng, J. Sander. LOF: Identifying Density-Based 
Local Outliers. SIGMOD 2000. 
 M. Ester, H.-P. Kriegel, J. Sander, and X. Xu. A density-based algorithm for 
discovering clusters in large spatial databases. KDD'96. 
 M. Ester, H.-P. Kriegel, and X. Xu. Knowledge discovery in large spatial 
databases: Focusing techniques for efficient class identification. SSD'95. 
 D. Fisher. Knowledge acquisition via incremental conceptual clustering. 
Machine Learning, 2:139-172, 1987. 
 D. Gibson, J. Kleinberg, and P. Raghavan. Clustering categorical data: An 
approach based on dynamic systems. VLDB’98.  
 V. Ganti, J. Gehrke, R. Ramakrishan. CACTUS Clustering Categorical Data 
Using Summaries. KDD'99.  
82 
References (2) 
 D. Gibson, J. Kleinberg, and P. Raghavan. Clustering categorical data: An 
approach based on dynamic systems. In Proc. VLDB’98. 
 S. Guha, R. Rastogi, and K. Shim. Cure: An efficient clustering algorithm for 
large databases. SIGMOD'98. 
 S. Guha, R. Rastogi, and K. Shim. ROCK: A robust clustering algorithm for 
categorical attributes. In ICDE'99, pp. 512-521, Sydney, Australia, March 1999.  
 A. Hinneburg, D.l A. Keim: An Efficient Approach to Clustering in Large 
Multimedia Databases with Noise. KDD’98. 
 A. K. Jain and R. C. Dubes. Algorithms for Clustering Data. Printice Hall, 1988. 
 G. Karypis, E.-H. Han, and V. Kumar. CHAMELEON: A Hierarchical Clustering 
Algorithm Using Dynamic Modeling. COMPUTER, 32(8): 68-75, 1999.  
 L. Kaufman and P. J. Rousseeuw. Finding Groups in Data: an Introduction to 
Cluster Analysis. John Wiley & Sons, 1990. 
 E. Knorr and R. Ng. Algorithms for mining distance-based outliers in large 
datasets. VLDB’98. 
83 
References (3) 
 G. J. McLachlan and K.E. Bkasford. Mixture Models: Inference and Applications to 
Clustering. John Wiley and Sons, 1988. 
 R. Ng and J. Han. Efficient and effective clustering method for spatial data mining. 
VLDB'94. 
 L. Parsons, E. Haque and H. Liu, Subspace Clustering for High Dimensional Data: A 
Review, SIGKDD Explorations, 6(1), June 2004 
 E. Schikuta. Grid clustering: An efficient hierarchical clustering method for very large 
data sets. Proc. 1996 Int. Conf. on Pattern Recognition,. 
 G. Sheikholeslami, S. Chatterjee, and A. Zhang. WaveCluster: A multi-resolution 
clustering approach for very large spatial databases. VLDB’98. 
 A. K. H. Tung, J. Han, L. V. S. Lakshmanan, and R. T. Ng. Constraint-Based Clustering 
in Large Databases, ICDT'01.  
 A. K. H. Tung, J. Hou, and J. Han. Spatial Clustering in the Presence of Obstacles, 
ICDE'01 
 H. Wang, W. Wang, J. Yang, and P.S. Yu. Clustering by pattern similarity in large data 
sets,  SIGMOD’ 02.  
 W. Wang, Yang, R. Muntz, STING: A Statistical Information grid Approach to Spatial 
Data Mining, VLDB’97. 
 T. Zhang, R. Ramakrishnan, and M. Livny. BIRCH : An efficient data clustering 
method for very large databases. SIGMOD'96. 
 Xiaoxin Yin, Jiawei Han, and Philip Yu, “LinkClus: Efficient Clustering via 
Heterogeneous Semantic Links”, in Proc. 2006 Int. Conf. on Very Large Data Bases 
(VLDB'06), Seoul, Korea, Sept. 2006. 
 
84 
85 
Chapter 10. Cluster Analysis: Basic 
Concepts and Methods 
 Cluster Analysis: Basic Concepts 
 What Is Cluster Analysis? 
 What is Good Clustering? Measuring the Quality of Clustering 
 Major categories of clustering methods 
 Clustering structures 
 Calculating Distance between Clusters 
 Partitioning Methods 
 k-Means: A Classical Partitioning Method 
 Alternative Methods: k-Medoids, k-Median, and its Variations 
 Hierarchical Methods 
 Agglomerative and Divisive Hierarchical Clustering 
 BIRCH: A Hierarchical, Micro-Clustering Approach 
 Chameleon: A Hierarchical Clustering Algorithm Using Dynamic Modeling 
 Density-Based Methods 
 DBSCAN and OPTICS: Density-Based Clustering Based on Connected Regions 
 DENCLUE: Clustering Based on Density Distribution Functions 
 Link-Based Cluster Analysis 
 SimRank: Exploring Links in Cluster Analysis 
 LinkClus: Scalability in Link-Based Cluster Analysis 
 Grid-Based Methods 
 STING: STatistical INformation Grid 
 WaveCluster: Clustering Using Wavelet Transformation 
 CLIQUE: A Dimension-Growth Subspace Clustering Method 
 Summary 
85 
Slides unused in class 
86 
87 
A Typical K-Medoids Algorithm (PAM) 
0
1
2
3
4
5
6
7
8
9
10
0 1 2 3 4 5 6 7 8 9 10
Total Cost = 20 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
0 1 2 3 4 5 6 7 8 9 10 
K=2 
Arbitrary 
choose k 
object as 
initial 
medoids 
0
1
2
3
4
5
6
7
8
9
10
0 1 2 3 4 5 6 7 8 9 10
Assign 
each 
remainin
g object 
to 
nearest 
medoids 
Randomly select a 
nonmedoid object,Oramdom 
Compute 
total cost of 
swapping 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
0 1 2 3 4 5 6 7 8 9 10 
Total Cost = 26 
Swapping O 
and Oramdom  
If quality is 
improved. 
Do loop 
Until no 
change 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
0 1 2 3 4 5 6 7 8 9 10 
88 
PAM (Partitioning Around Medoids) 
(1987) 
 PAM (Kaufman and Rousseeuw, 1987), built in Splus 
 Use real object to represent the cluster 
 Select k representative objects arbitrarily 
 For each pair of non-selected object h and selected 
object i, calculate the total swapping cost TCih 
 For each pair of i and h,  
 If TCih < 0, i is replaced by h 
 Then assign each non-selected object to the most 
similar representative object 
 repeat steps 2-3 until there is no change 
89 
PAM Clustering: Finding the Best Cluster 
Center 
 Case 1: p currently belongs to oj.  If oj is replaced by orandom as a 
representative object and p is the closest to one of the other 
representative object oi, then p is reassigned to oi 
90 
What Is the Problem with PAM? 
 Pam is more robust than k-means in the presence of 
noise and outliers because a medoid is less influenced by 
outliers or other extreme values than a mean 
 Pam works efficiently for small data sets but does not 
scale well for large data sets. 
 O(k(n-k)2 ) for each iteration  
   where n is # of data,k is # of clusters 
Sampling-based method 
 CLARA(Clustering LARge Applications) 
91 
CLARA (Clustering Large Applications) 
(1990) 
 CLARA (Kaufmann and Rousseeuw in 1990) 
 Built in statistical analysis packages, such as SPlus 
 It draws multiple samples of the data set, applies 
PAM on each sample, and gives the best clustering as 
the output 
 Strength: deals with larger data sets than PAM 
 Weakness: 
 Efficiency depends on the sample size 
 A good clustering based on samples will not 
necessarily represent a good clustering of the whole 
data set if the sample is biased 
92 
CLARANS (“Randomized” CLARA) 
(1994) 
 CLARANS (A Clustering Algorithm based on Randomized 
Search)  (Ng and Han’94) 
 Draws sample of neighbors dynamically 
 The clustering process can be presented as searching a 
graph where every node is a potential solution, that is, a 
set of k medoids 
 If the local optimum is found, it starts with new 
randomly selected node in search for a new local 
optimum 
 Advantages:  More efficient and scalable than both PAM 
and CLARA 
 Further improvement: Focusing techniques and spatial 
access structures (Ester et al.’95) 
93 
ROCK: Clustering Categorical Data 
 ROCK: RObust Clustering using linKs  
 S. Guha, R. Rastogi & K. Shim, ICDE’99 
 Major ideas 
 Use links to measure similarity/proximity 
 Not distance-based 
 Algorithm: sampling-based clustering 
 Draw random sample 
 Cluster with links 
 Label data in disk 
 Experiments 
 Congressional voting, mushroom data  
94 
Similarity Measure in ROCK 
 Traditional measures for categorical data may not work well, e.g., 
Jaccard coefficient 
 Example: Two groups (clusters) of transactions 
 C1. <a, b, c, d, e>: {a, b, c}, {a, b, d}, {a, b, e}, {a, c, d}, {a, c, 
e}, {a, d, e}, {b, c, d}, {b, c, e}, {b, d, e}, {c, d, e} 
 C2. <a, b, f, g>: {a, b, f}, {a, b, g}, {a, f, g}, {b, f, g} 
 Jaccard co-efficient may lead to wrong clustering result 
 C1: 0.2 ({a, b, c}, {b, d, e}} to 0.5 ({a, b, c}, {a, b, d})  
 C1 & C2: could be as high as 0.5  ({a, b, c}, {a, b, f})  
 Jaccard co-efficient-based similarity function:  
 
 Ex.  Let T1 = {a, b, c}, T2 = {c, d, e} 
Sim T T
T T
T T
( , )1 2
1 2
1 2
=
∩
∪
2.0
5
1
},,,,{
}{
),( 21 ===
edcba
c
TTSim
95 
Link Measure in ROCK 
 Clusters 
 C1:<a, b, c, d, e>: {a, b, c}, {a, b, d}, {a, b, e}, {a, c, d}, {a, c, e}, {a, 
d, e}, {b, c, d}, {b, c, e}, {b, d, e}, {c, d, e} 
 C2: <a, b, f, g>: {a, b, f}, {a, b, g}, {a, f, g}, {b, f, g} 
 Neighbors 
 Two transactions are neighbors if sim(T1,T2) > threshold 
 Let T1 = {a, b, c}, T2 = {c, d, e}, T3 = {a, b, f} 
 T1  connected to: {a,b,d}, {a,b,e}, {a,c,d}, {a,c,e}, {b,c,d}, {b,c,e}, 
{a,b,f}, {a,b,g} 
 T2 connected to: {a,c,d}, {a,c,e}, {a,d,e}, {b,c,e}, {b,d,e}, {b,c,d} 
 T3 connected to: {a,b,c}, {a,b,d}, {a,b,e}, {a,b,g}, {a,f,g}, {b,f,g} 
 Link Similarity 
 Link similarity between two transactions is the # of common neighbors 
 link(T1, T2) = 4, since they have 4 common neighbors 
 {a, c, d}, {a, c, e}, {b, c, d}, {b, c, e} 
 link(T1, T3) = 3, since they have 3 common neighbors 
 {a, b, d}, {a, b, e}, {a, b, g} 
Measuring Clustering Quality: External Methods  
 Clustering quality measure: Q(C, Cg), for a clustering C 
given the ground truth Cg.  
 Q is good if it satisfies the following 4 essential criteria 
 Cluster homogeneity: the purer, the better 
 Cluster completeness: should assign objects belong to 
the same category in the ground truth to the same 
cluster 
 Rag bag: putting a heterogeneous object into a pure 
cluster should be penalized more than putting it into a 
rag bag (i.e., “miscellaneous” or “other” category) 
 Small cluster preservation: splitting a small category 
into pieces is more harmful than splitting a large 
category into pieces 
97 
Assessing Clustering Tendency 
 Assess if non-random structure exists in the data by measuring the 
probability that the data is generated by a uniform data distribution 
 Test spatial randomness by statistic test: Hopkins Static 
 Given a dataset D regarded as a sample of a random variable o, 
determine how far away o is from being uniformly distributed in 
the data space 
 Sample n points, p1, …, pn, uniformly from D.  For each pi, find its 
nearest neighbor in D:  xi = min{dist (pi, v)} where v in D 
 Sample n points, q1, …, qn, uniformly from D.  For each qi, find its 
nearest neighbor in D – {qi}:  yi = min{dist (qi, v)} where v in D 
and v ≠ qi 
 Calculate the Hopkins Statistic: 
 
 If D is uniformly distributed, ∑ xi and ∑ yi will be close to each 
other and H is close to 0.5.  If D is clustered, H is close to 1 
 98 
