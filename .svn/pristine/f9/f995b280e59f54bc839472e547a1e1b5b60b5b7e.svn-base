CS 241 Wrap Up 
Yayyy! 
What did you learn? 
• Write, compile, debug, and execute C 
programs 
 
What did you learn? 
• Write, compile, debug, and execute C programs 
• Interact with the operating system via POSIX system 
calls 
 
What did you learn? 
• Write, compile, debug, and execute C programs 
• Interact with the operating system via POSIX system 
calls 
• Understand memory allocation and virtualization 
 
What did you learn? 
• Write, compile, debug, and execute C programs 
• Interact with the operating system via POSIX system 
calls 
• Understand memory allocation and virtualization 
• Create and manage many processes and threads 
 
What did you learn? 
• Write, compile, debug, and execute C programs 
• Interact with the operating system via POSIX system 
calls 
• Understand memory allocation and virtualization 
• Create and manage many processes and threads 
• Control scheduling of processes/threads 
 
What did you learn? 
• Write, compile, debug, and execute C programs 
• Interact with the operating system via POSIX system 
calls 
• Understand memory allocation and virtualization 
• Create and manage many processes and threads 
• Control scheduling of processes/threads 
• Communicate and share resources between threads 
What did you learn? 
• Write, compile, debug, and execute C programs 
• Interact with the operating system via POSIX system 
calls 
• Understand memory allocation and virtualization 
• Create and manage many processes and threads 
• Control scheduling of processes/threads 
• Communicate and share resources between threads 
• Use communication protocols (TCP/IP) and 
interfaces (sockets) 
 
What did you learn? 
• Write, compile, debug, and execute C programs 
• Interact with the operating system via POSIX system 
calls 
• Understand memory allocation and virtualization 
• Create and manage many processes and threads 
• Control scheduling of processes/threads 
• Communicate and share resources between threads 
• Use communication protocols (TCP/IP) and interfaces 
(sockets) 
• Write distributed multi-threaded apps that talk 
across a network 
 
What did you do? 
• Wrote a real memory allocator. 
 
What did you do? 
• Wrote a real memory allocator. 
• Wrote many real non-trivial parallel applications 
(merge sort, make) 
 
 
What did you do? 
• Wrote a real memory allocator. 
• Wrote many real non-trivial parallel applications 
(merge sort, make) 
• A real data framework for processing big data 
 
 
What did you do? 
• Wrote a real memory allocator. 
• Wrote many real non-trivial parallel applications 
(merge sort, make) 
• A real data framework for processing big data 
• A real web server 
 
 
What did you do? 
• Wrote a real memory allocator. 
• Wrote many real non-trivial parallel applications 
(merge sort, make) 
• A real data framework for processing big data 
• A real web server 
• A real shell 
 
 
Applied Problem #1 
• Consider a system of two processes that may 
only communicate via signals. 
– Explain how one process can transmit data to the 
other process. 
 
– If it takes 100ms for a signal to be sent and then 
delivered to the other process, what is the bitrate 
of your transmission algorithm? 
 
 
Applied Problem #1 
 
What will you do next? 
• Q: What did you enjoy about this class? 
– A1: Processes/threads, memory, managing system 
resources? 
 
– A2: Concurrency, synchronization, optimization? 
 
– A3: Networking, client-server programming? 
 
– A4: The tiny bit of security we did? 
 
– A5: Programming / MP design 
 
– A6: Nothing at all 
 
 
What will you do next? 
• Q: What did you enjoy about this class? 
– A1: Processes/threads, memory, managing system 
resources? 
• CS 423: Operating Systems 
• CS 424: Real-time Systems 
• CS 431: Embedded Systems 
 
 
What will you do next? 
• Q: What did you enjoy about this class? 
– A2: Concurrency, synchronization, optimization? 
• CS 411: Database Systems 
• CS 420: Parallel Programming 
 
What will you do next? 
• Q: What did you enjoy about this class? 
– A3: Networking, client-server programming? 
• CS 414: Multimedia Systems 
• CS 425: Distributed Systems 
• CS 438: Computer Networking 
What will you do next? 
• Q: What did you enjoy about this class? 
– A4: The tiny bit of security we did? 
• CS 461: Computer Security I 
• CS 462: Computer Security II 
 
What will you do next? 
• Q: What did you enjoy about this class? 
– A5: Programming / MP design 
• CS 421: Programming Languages and Design 
• CS 426: Compiler Construction 
• CS 427: Software Engineering I 
What will you do next? 
• Q: What did you enjoy about this class? 
– A6: Nothing at all? 
• “Higher Level” 
– CS 465: User Interface Design 
– CS 398.VL (Spring 2014): Visualizing Literature 
– CS 498.CC3/CC4 (Spring 2014): Cloud Computing 
• “More Applied” 
– CS 418/419: Computer Graphics 
– CS 446: Machine Learning 
– CS 440: Artificial Intelligence 
• “More Math” 
– CS 450: Numerical Analysis 
 
