1 Chomsky Normal Form
Normal Forms for Grammars
It is typically easier to work with a context free language if given a CFG in a normal form.
Normal Forms
A grammar is in a normal form if its production rules have a special structure:
• Chomsky Normal Form: Productions are of the form A→ BC or A→ a, where A,B,C are
variables and a is a terminal symbol.
• Greibach Normal Form Productions are of the form A→ aα, where α ∈ V ∗ and A ∈ V .
If  is in the language, we allow the rule S → . We will require that S does not appear on the
right hand side of any rules.
We will restrict our discussion to Chomsky Normal Form.
Main Result
Proposition 1. For any non-empty context-free language L, there is a grammar G, such that
L(G) = L and each rule in G is of the form
1. A→ a where a ∈ Σ, or
2. A→ BC where neither B nor C is the start symbol, or
3. S →  where S is the start symbol (iff  ∈ L)
Furthermore, G has no useless symbols.
Outline of Normalization
Given G = (V,Σ, S, P ), convert to CNF
• Let G′ = (V ′,Σ, S, P ′) be the grammar obtained after eliminating -productions, unit pro-
ductions, and useless symbols from G.
• If A → x is a rule of G′, where |x| = 0, then A must be S (because G′ has no other -
productions). If A → x is a rule of G′, where |x| = 1, then x ∈ Σ (because G′ has no unit
productions). In either case A→ x is in a valid form.
• All remaining productions are of form A → X1X2 · · ·Xn where Xi ∈ V ′ ∪ Σ, n ≥ 2 (and
S does not occur in the RHS). We will put these rules in the right form by applying the
following two transformations:
1. Make the RHS consist only of variables
2. Make the RHS be of length 2.
1
Make the RHS consist only of variables
Let A → X1X2 · · ·Xn, with Xi being either a variable or a terminal. We want rules where all
the Xi are variables.
Example 2. Consider A→ BbCdefG. How do you remove the terminals?
For each a, b, c . . . ∈ Σ add variables Xa, Xb, Xc, . . . with productions Xa → a, Xb → b, . . ..
Then replace the production A→ BbCdefG by A→ BXbCXdXeXfG
For every a ∈ Σ
1. Add a new variable Xa
2. In every rule, if a occurs in the RHS, replace it by Xa
3. Add a new rule Xa → a
Make the RHS be of length 2
• Now all productions are of the form A→ a or A→ B1B2 · · ·Bn, where n ≥ 2 and each Bi is
a variable.
• How do you eliminate rules of the form A→ B1B2 . . . Bn where n > 2?
• Replace the rule by the following set of rules
A → B1B(2,n)
B(2,n) → B2B(3,n)
B(3,n) → B3B(4,n)
...
B(n−1,n) → Bn−1Bn
where B(i,n) are “new” variables.
An Example
Example 3. Convert: S → aA|bB|b, A→ Baa|ba, B → bAAb|ab, into Chomsky Normal Form.
1. Eliminate -productions, unit productions, and useless symbols. This grammar is already in
the right form.
2. Remove terminals from the RHS of long rules. New grammar is: Xa → a, Xb → b, S →
XaA|XbB|b, A→ BXaXa|XbXa, and B → XbAAXb|XaXb
3. Reduce the RHS of rules to be of length at most two. New grammar replaces A→ BXaXa by
rules A → BXaa, Xaa → XaXa, and B → XbAAXb by rules B → XbXAAb, XAAb → AXAb,
XAb → AXb
2
