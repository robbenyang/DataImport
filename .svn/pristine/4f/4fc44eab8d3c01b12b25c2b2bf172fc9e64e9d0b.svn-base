Kevin C. Chang
Query Optimization
Database Systems
• Query optimization, query optimizer
• Logical query plans
• Algebraic laws of equivalence
• Rule‐based optimization, Heuristic
• Cost‐based optimization
• Join trees
• Dynamic programming
• Physical query plans
• Intermediate results, pipeline, materialization
• Estimating sizes
Concepts You Will Learn
Query Optimization (1 of 64)Default Section (1 of 2)
The Big Picture: Where We Are
Query Optimization (2 of 64)
Data Access
Data Modeling
Data/Query Processing
Data Acquisition
Relational NonRelational
S
t
r
u
c
t
u
r
e
d
S
e
m
i
S
t
r
u
c
t
u
r
e
d
Transaction Management
N
o
S
Q
L
 
D
a
t
a
b
a
s
e
s
X
M
L
 
D
a
t
a
b
a
s
e
s
U
n
t
r
u
c
t
u
r
e
d
Relational Databases
• SQL
• Relational Algebra
• Query Optimization
• Query Execution
• Indexing
• Concurrency Control
• Logging Recovery
Database Systems Toolkits
M
a
p
 
R
e
d
u
c
e
(
P
a
r
a
l
l
e
l
)
S
t
o
r
m
 
(
S
t
r
e
a
m
)
Information Extraction
ER  Relational Model
Query Language
Default Section (2 of 2)
Why Do We Learn This?
Query Optimization (3 of 64)Why Do We Learn This? (0 of 0)
Overview
Query Optimization (4 of 64)Overview (0 of 5)
• At the heart of the database engine
• Step 1: convert the SQL query to some logical plan
• Step 2: find a better logical plan, find an associated 
physical plan
Optimization
Query Optimization (5 of 64)Overview (1 of 5)
SELECT a1, …, an
FROM R1, …, Rk
WHERE C
ଵ ௡
Converting from SQL to Logical Plans
Query Optimization (6 of 64)Overview (2 of 5)
• Now we have one logical plan
• Algebraic laws:
• foundation for every optimization
• Two approaches to optimizations:
• Rule‐based (heuristics): apply laws that seem to result in 
cheaper plans
• Cost‐based: estimate size and cost of intermediate 
results, search systematically for best plan
Optimization: Logical Query Plan
Query Optimization (7 of 64)Overview (3 of 5)

Select S.name, C.instructor
From Students S, Enrollment E, Course C
Where S.dept = ‘CS’ and 
S.sid=E.sid and E.cid = C.cid
Motivating Example
Query Optimization (8 of 64)Overview (4 of 5)
• We need three things in an optimizer:
• Algebraic laws
• A cost estimator
• An optimization algorithm
The three components of an optimizer
Query Optimization (9 of 64)Overview (5 of 5)
Algebraic Laws
Query Optimization (10 of 64)Algebraic Laws (0 of 4)
• Commutative and Associative Laws
• ܴ ∪ ܵ	 ൌ 	ܵ ∪ ܴ, ܴ ∪ ሺܵ ∪ ܶሻ 	ൌ 	 ሺܴ ∪ ܵሻ ∪ ܶ
• ܴ	 ∩ 	ܵ	 ൌ 	ܵ	 ∩ 	ܴ, ܴ	 ∩ 	ሺܵ	 ∩ 	ܶሻ 	ൌ 	 ሺܴ	 ∩ 	ܵሻ 	∩ 	ܶ
• ܴ	 ⋈ 	ܵ	 ൌ 	ܵ	 ⋈ 	ܴ, ܴ	 ⋈ 	 ሺܵ	 ⋈ 	ܶሻ 	ൌ 	 ሺܴ	 ⋈ 	ܵሻ 	⋈ 	ܶ
• Distributive Laws
• ܴ	 ⋈ 	 ሺܵ ∪ ܶሻ 		ൌ 		 ሺܴ	 ⋈ 	ܵሻ ∪ ሺܴ	 ⋈ 	ܶሻ
Algebraic Laws
Query Optimization (11 of 64)
Q: How to prove these laws?
Algebraic Laws (1 of 4)
• Laws involving selection:
• 	ߪ஼	஺ே஽	஼ᇱ	ሺܴሻ 	ൌ ߪ஼ሺߪ஼ᇲ	 ܴ ሻ ൌ ߪ஼ሺܴሻ 	∩ ߪ஼ᇱሺܴሻ
• ߪ஼	ைோ	஼ᇱ	 ܴ ൌ ߪ஼ ܴ ∪ ߪ஼ᇱሺܴሻ
• ߪ஼	ሺܴ	 ⋈ 	ܵሻ 	ൌ ߪ஼ ܴ ⋈ 	ܵ	
• When C involves only attributes of R
• ߪ஼	 ܴ	 െ 	ܵ ൌ ߪ஼ ܴ െ 	ܵ	
• ߪ஼	 ܴ ∪ ܵ ൌ ߪ஼ ܴ ∪ ܵ
• ߪ஼ ܴ	 ∩ 	ܵ 	ൌ ߪ஼ ܴ ∩ 	ܵ
• Q: What do they mean? Make sense?
Algebraic Laws
Query Optimization (12 of 64)Algebraic Laws (2 of 4)
• Example:  
• 	ݏிୀଷ	ሺܴ	 ⋈஽ୀா ܵሻ 	ൌ																																							?
• 	ݏ஺ୀହ	஺ே஽	ீୀଽ	ሺܴ ⋈஽ୀா ܵሻ 	ൌ																									?
Algebraic Laws
Query Optimization (13 of 64)Algebraic Laws (3 of 4)
• Laws involving projections
• 	ߨெሺܴ	 ⋈ 	ܵሻ 	ൌ ߨேሺߨ௉ሺܴሻ 	⋈ ߨொሺܵሻሻ
• Where N, P, Q are appropriate subsets of attributes of M
• 		ߨெሺߨேሺܴሻሻ 	ൌ 	ߨெ∩ேሺܴሻ
• Example 
• ߨ஺,஻,ீሺܴ ⋈஽ୀா ܵሻ 	ൌ ߨ?	ሺߨ?ሺܴሻ 	⋈ ߨ?ሺܵሻሻ	
Algebraic Laws
Query Optimization (14 of 64)Algebraic Laws (4 of 4)
Optimizer
Query Optimization (15 of 64)Optimizer (0 of 2)
Behind the Scene: Oracle RBO and CBO
Query Optimization (16 of 64)
• Oracle 7 (1992) prior (since 1979): RBO.
• Oracle 7-10: RBO + CBO.
• Oracle 10g (2003): CBO.
Optimizer (1 of 2)
Behind the Scene: Oracle RBO and CBO
Query Optimization (17 of 64)Optimizer (2 of 2)
Rule‐based Optimization
Query Optimization (18 of 64)Rule‐based Optimization (0 of 3)
• Query rewriting based on heuristic/algebraic laws
• Result in better queries most of the time
• Heuristics number 1:
• Push selections down
• Heuristics number 2:
• Sometimes push selections up, then down
Ruler‐ased Optimizations
Query Optimization (19 of 64)Rule‐based Optimization (1 of 3)
Predicate Pushdown
Product Company
࢖࢘࢏ࢉࢋவ૚૙૙	࡭ࡺࡰ	ࢉ࢏࢚࢟ୀ"ࢁ࢘࢈ࢇ࢔ࢇ"
࢖࢔ࢇ࢓ࢋ
௠௔௞௘௥ୀ௖௡௔௠௘
Product(pname, maker, price) Company(cname, city)
Rule‐based Optimization (2 of 3) Query Optimization (20 of 64)
Cost‐based Optimization
Query Optimization (22 of 64)Cost‐based Optimization (0 of 5)
Behind the Scene: The Selinger Style!
Query Optimization (23 of 64)Cost‐based Optimization (1 of 5)
Behind the Scene: The Selinger Style!
Query Optimization (24 of 64)Cost‐based Optimization (2 of 5)
• Main idea: apply algebraic laws, until estimated 
cost is minimal
• Practically: start from partial plans, introduce 
operators one by one
• Will see in a few slides
• Problem: there are too many ways to apply the 
laws, hence too many (partial) plans
Cost‐based Optimization
Query Optimization (25 of 64)Cost‐based Optimization (3 of 5)
• Approaches:
• Top‐down: the partial plan is a top fragment of the 
logical plan
• Bottom up: the partial plan is a bottom fragment of 
the logical plan
Cost‐based Optimization
Query Optimization (26 of 64)Cost‐based Optimization (4 of 5)
• Branch‐and‐bound:
• Remember the cheapest complete plan P seen so far and 
its cost C
• Stop generating partial plans whose cost is > C
• If a cheaper complete plan is found, replace P, C
• Hill climbing:
• Remember only the cheapest partial plan seen so far
• Dynamic programming:
• Remember the all cheapest partial plans
Search Strategies
Query Optimization (27 of 64)Cost‐based Optimization (5 of 5)
Dynamic Programming
Query Optimization (28 of 64)Dynamic Programming (0 of 12)
•
• Join tree:
• A plan = a join tree
• A partial plan = a subtree of a join tree
Join Trees
Query Optimization (29 of 64)
R3 R1 R2 R4
Dynamic Programming (1 of 12)
• Left deep:
Types of Join Trees
Query Optimization (30 of 64)
R3 R1
R5
R2
R4
Dynamic Programming (2 of 12)
• Bushy:
Types of Join Trees
Query Optimization (31 of 64)
R3
R1
R2 R4
R5
Dynamic Programming (3 of 12)
• Right deep:
Types of Join Trees
Query Optimization (32 of 64)
R3
R1
R5
R2 R4
Dynamic Programming (4 of 12)
