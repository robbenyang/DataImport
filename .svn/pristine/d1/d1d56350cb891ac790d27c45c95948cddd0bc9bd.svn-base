MP7 available, due 12/10, 11:59p. EC due 12/3, 11:59p.
Code challenge #3:
 
Today’s announcements:
Q:  if this graph is simple and connected, how 
many edges does it have?
A:  at least ________, at most _________
Graphs: Toward implementation…(ADT)
Data:
Vertices
Edges
+ some structure that reflects 
the connectivity of the graph
X
V
W
Z
Y
b
e
d
f
g
h
Functions: (merely a smattering…)
insertVertex(pair keyData)
insertEdge(vertex v1, vertex v2, pair keyData)
removeEdge(edge e);
removeVertex(vertex v);
incidentEdges(vertex v);
areAdjacent(vertex v1, vertex v2);
origin(edge e);
destination(edge e);
Graphs: Edge List (a first implementation)
v
u
w
a c
b
z
d
a
b
c
d
u
v
w
z
Some functions we’ll compare:
insertVertex(vertex v)
removeVertex(vertex v)
areAdjacent(vertex v, vertex u)
incidentEdges(vertex v)
Graphs: Adjacency Matrix
v
u
w
a c
b
z
d
a
b
c
d
u v w z
u
v
w
z
u
v
w
z
Some functions we’ll compare:
insertVertex(vertex v)
removeVertex(vertex v)
areAdjacent(vertex v, vertex u)
incidentEdges(vertex v)
Graphs: Adjacency List
v
u
w
a c
b
z
d
a
b
c
d
u
v
w
z
Some functions we’ll compare:
insertVertex(vertex v)
removeVertex(vertex v)
areAdjacent(vertex v, vertex u)
incidentEdges(vertex v)
Graphs: Asymptotic Performance
• n vertices, m edges
• no parallel edges
• no self-loops
• Bounds are big-O
Edge
List
Adjacency
List
Adjacency 
Matrix
Space n + m n + m n2
incidentEdges(v) m deg(v) n
areAdjacent (v, w) m min(deg(v), deg(w)) 1
insertVertex(o) 1 1 n2
insertEdge(v, w, o) 1 1 1
removeVertex(v) m deg(v) n2
removeEdge(e) 1 1 1
7planarity.net
http://www.math.binghamton.edu/somnath/Teaching/CTY_Oct09.pdf
http://www.dbai.tuwien.ac.at/proj/ramsey/
