MP6 available, due 11/19, 11:59p.
 
Today’s announcements:
A B C
D E F
If (Find(A) != Find(B)
 Union(Find(A),Find(B));
If (Find(D) != Find(E)
 Union(Find(D),Find(E));
If (Find(A) != Find(C)
 Union(Find(A),Find(C));
If (Find(C) != Find(B)
 Union(Find(C),Find(B));
If (Find(B) != Find(F))
 Union(Find(B),Find(F));
Path Compression:
10
9 11
1 7
2 8
43
5 6
int DS::Find(int i) {
   if (s[i] < 0) return i;
   else return      Find(s[i]);
}
void DS::UnionBySize(int root1, int root2) {
   int newSize = s[root1]+s[root2];
   if (isBigger(root1,root2)) {
      s[root2]= root1;
      s[root1]= newSize;
   }
   else {
      s[root1] = root2;
      s[root2]= newSize;
   }
}
Analysis:
Example:
265536
Relevant result:
In an upTree implementation of Disjoint Sets using smart union and 
path compression upon find...
any sequence of m union and find operations results in worst case 
running time of O(__________), where n is the number of items.
http://research.cs.vt.edu/AVresearch/UF/

5

This graph can be used to quickly 
calculate whether a given number is 
divisible by 7.
1.Start at the circle node at the top.
2.For each digit d in the given 
number, follow d blue (solid) edges in 
succession. As you move from one 
digit to the next, follow 1 red (dashed) 
edge.
3.If you end up back at the circle 
node, your number is divisible by 7.
3703

96
How do we get from here to there?
Need:
1.  Common Vocabulary
2. Graph implementation
3. Traversal
4. Algorithms.
6
Graph Vocabulary:
Incident edges(v):  I = {(x,v) in E}
Degree(v): |I|
Adjacent vertices(v): A = {x: (x,v) in E}
Path(G2) - sequence of vertices 
connected by edges.
Cycle(G1) - path with common begin 
and end vertex.
Simple graph(G) - graph with no self-
loops and no multi-edges.
G = (V,E)
|V| = n
|E| = m
G1 G2 G3
Graph Vocabulary:
Subgraph(G) – G’ = (V’, E’), V’__ 
V, E’ ___ E, and   (u,v) ___ E’ 
implies u___V’ and v ___ V’.
Complete subgraph(G2) – 
Connected subgraph(G) - 
Connected component(G) – 
Acyclic subgraph(G2) – 
Spanning tree(G1) – 
G = (V,E)
|V| = n
|E| = m
G1 G2 G3
