Kevin C. Chang
ER Model
CS411 Database Systems
• Students:
• Please attend class and participate.
• Please sit in the front rows so we are together.
• Please interact with instructor (signal, ask, answer).
• Please do not fall asleep or …
The New Contract on Lecture: Students 
ER Model (2 of 56)Administration (1 of 2)
• Instructor:
• Will be do my best to prepare.
• Will respect each question.
• Will not rush to cover all the materials.
• Will make sure online students hear well.
• Will not fall asleep or …
The New Contract on Lecture: Instructor
ER Model (3 of 56)Administration (2 of 2)
Why Do We Learn This?
ER Model (4 of 56)Why Do We Learn This? (1 of 8)
ER Model (5 of 56)Why Do We Learn This? (2 of 8)
Why Do We Learn This?
Why Do We Learn This?
ER Model (6 of 56)Why Do We Learn This? (3 of 8)
ER Model (7 of 56)Why Do We Learn This? (4 of 8)
ER Model (8 of 56)Why Do We Learn This? (5 of 8)
ER Model (9 of 56)Why Do We Learn This? (6 of 8)
• Suppose you are working on CS411 project
• Step 0: pick an application domain
• we will talk about this later
• Step 1: conceptual design
• discuss with your team mates what to model in the application domain
• need a modeling language to express what you want
• ER model is the most popular such language
• output: an ER diagram of the app. domain
Steps in Building a DB Application
ER Model (10 of 56)Why Do We Learn This? (7 of 8)
• Step 2: pick a type of DBMS
• relational DBMS is most popular and is our focus
• Step 3: translate ER design to a relational schema
• use a set of rules to translate from ER to rel. schema
• use a set of schema refinement rules to transform the above rel. schema into 
a good rel. schema
• At this point
• you have a good relational schema on paper
• And then …
Steps in Building a DB Application
ER Model (11 of 56)Why Do We Learn This? (8 of 8)
ER Model
ER Model (12 of 56)Overview (1 of 3)
• Gives us a language to specify
• what information the db must hold
• what are the relationships among components of that information
• Proposed by Peter Chen in 1976
• What we will cover
• basic stuff
• constraints
• weak entity sets
• design principles
ER Model
ER Model (13 of 56)Overview (2 of 3)
ER Diagram
ER Model (14 of 56)Overview (3 of 3)
address name ssn
Person
buys
makes
employs
Company
Product
name category
stockprice
name
price
Entities, Attributes, 
Relationships
ER Model (15 of 56)Entity, Attribute, Relationship (1 of 11)
• Entities
• real-world objects distinguishable from other objects
• described using a set of attributes
• Attributes
• each has an atomic domain: string, integers, reals, etc.
• Entity set: a collection of similar entities
Entities and Attributes
ER Model (16 of 56)Entity, Attribute, Relationship (2 of 11)
Product
name categoryprice
• A mathematical definition:
• if A, B are sets, then a relation R is a subset of A x B
• A={1,2,3},   B={a,b,c,d},
• R = {(1,a), (1,c), (3,b)}
• makes is a subset of Product x Company:
Relationships
ER Model (17 of 56)Entity, Attribute, Relationship (3 of 11)
1
2
3
a
b
c
d
A=
B=
makes Company
Product
• one-one:
• many-one
• many-many
Multiplicity of E/R Relationships
ER Model (18 of 56)Entity, Attribute, Relationship (4 of 11)
1
2
3
a
b
c
d
1
2
3
a
b
c
d
1
2
3
a
b
c
d
Multiway Relationships
ER Model (19 of 56)Entity, Attribute, Relationship (5 of 11)
How do we model a purchase relationship between buyers,
products and stores?
Purchase
Product
Person
Store
Can still model as a mathematical set (how ?)
• Q: what does the arrow mean ?
• A:
Arrows in Multiway Relationships
ER Model (20 of 56)Entity, Attribute, Relationship (6 of 11)
Rental
VideoStore
Person
Movie
Invoice
• Q: how do I say: “invoice determines store” ?
• A: no good way; best approximation:
• Q: Why is this incomplete ?
Arrows in Multiway Relationships
ER Model (21 of 56)Entity, Attribute, Relationship (7 of 11)
Rental
VideoStore
Person
Movie
Invoice
Roles in Relationships
ER Model (22 of 56)Entity, Attribute, Relationship (8 of 11)
Purchase
What if we need an entity set twice in one relationship?
Product
Person
Store
salesperson buyer
Person
Roles in Relationships
ER Model (23 of 56)Entity, Attribute, Relationship (9 of 11)
Purchase
What if we need an entity set twice in one relationship?
Product
Person
Store
salesperson buyer
Attributes on Relationships
ER Model (24 of 56)Entity, Attribute, Relationship (10 of 11)
Purchase
Product
Person
Store
date
Q: Attributes vs. Entities on Relationships?
ER Model (25 of 56)Entity, Attribute, Relationship (11 of 11)
Purchase
Product?
Person
Store
Product?
Subclasses
ER Model (26 of 56)Subclasses (1 of 6)
ER Model (27 of 56)Subclasses (2 of 6)
Product
name categoryprice
isa isa
Educational ProductSoftware Product
Age Groupplatforms
Subclasses in ER Diagrams
Warning: Viewers’ Discretion Please
ER Model (28 of 56)Subclasses (3 of 6)
• Subclass = special case = fewer entities = more properties.
• Example: Ales are a kind of beer.
• Not every beer is an ale, but some are.
• Let us suppose that in addition to all the properties (attributes and 
relationships) of beers, ales also have the attribute color.
Subclasses
ER Model (29 of 56)Subclasses (4 of 6)
• Assume subclasses form a tree.
• I.e., no multiple inheritance.
• Isa triangles indicate the subclass relationship.
• Point to the superclass.
Subclasses in ER Diagrams
ER Model (30 of 56)Subclasses (5 of 6)
Example
ER Model (31 of 56)Subclasses (6 of 6)
Beers
Ales
isa
name manf
color
• Born in Taichung, Taiwan Peter Chen received a B.S. in electrical 
engineering in 1968 at the National Taiwan University, and a Ph.D. in 
computer science/applied mathematics at the Harvard University in 
1973. From 1974 to 1978 Chen as Assistant Professor at MIT Sloan 
School of Management. From 1978 to 1984 he was Professor at the 
University of California, Los Angeles (UCLA Management School). 
Since 1983 Chen has held the position of M. J. Foster Distinguished 
Chair Professor of Computer Science at Louisiana State University.
• 1976. "The Entity-Relationship Model--Toward a Unified View of 
Data". In: ACM Transactions on Database Systems 1/1/1976 ACM-
Press ISSN 0362-5915, S. 9–36
• One of the most cited CS papers.
• http://en.wikipedia.org/wiki/Peter_Chen
Behind the Scene: Peter Chen
ER Model (32 of 56)Intermission (1 of 1)
Constraints
ER Model (33 of 56)Constraints (1 of 12)
• A constraint = an assertion about the database that must be true at 
all times
• Part of the database schema
• Very important in database design 
Constraints
ER Model (34 of 56)Constraints (2 of 12)
• Keys: social security number uniquely identifies a person.
• Single-value constraints:  a person can have only one father.
• Referential integrity constraints: if you work for a company, it must 
exist in the database.
• Domain constraints:  peoples’ ages are between 0 and 150.
• General constraints: all others (at most 50 students enroll in a class)
Modeling Constraints:  
Part of the modeling process. 
ER Model (35 of 56)Constraints (3 of 12)
• Give more semantics to the data
• help us better understand it
• Allow us to refer to entities (e.g., using keys)
• Enable efficient storage, data lookup, etc.
Why Constraints are Important?
ER Model (36 of 56)Constraints (4 of 12)
Keys in E/R Diagrams
ER Model (37 of 56)Constraints (5 of 12)
address name ssn
Person
Product
name category
price
No formal way 
to specify multiple
keys in E/R diagrams
Underline:
• Every entity set must have a key
• why?
• A key can consist of more than one attribute
• There can be more than one key for an entity set
• one key will be designated as primary key
• Requirement for key in an isa hierarchy
• see book
More about Keys
ER Model (38 of 56)Constraints (6 of 12)
• Ref. int. constraint: exactly one value exists in a given role
• An attribute has a non-null, single value
• this can be considered a kind of ref. int. constraint
• However, we more commonly use such constraints to refer to 
relationships
Referential Integrity Constraint
ER Model (39 of 56)Constraints (7 of 12)
• In some formalisms we may refer to other object but get garbage 
instead
• e.g. a dangling pointer in C/C++
• The Referential Integrity Constraint on relationships explicitly 
requires a reference to exist
Referential Integrity Constraints
ER Model (40 of 56)Constraints (8 of 12)
Referential Integrity Constraints
ER Model (41 of 56)Constraints (9 of 12)
CompanyProduct makes
CompanyProduct makes
• This will be even clearer once we get to relational databases
Weak Entity Sets
ER Model (42 of 56)Constraints (10 of 12)
Entity sets are weak when their key attributes come from other
classes to which they are related.
This happens if:
- part-of hierarchies
- splitting n-ary relations to binary.
UniversityTeam affiliation
numbersport name
)
• Occasionally, entities of an entity set need “help” to identify them 
uniquely.
• Entity set E  is said to be weak  if in order to identify entities of E  
uniquely, we need to follow one or more many-one relationships 
from E  and include the key of the related entities from the 
connected entity sets.
Weak Entity Sets
ER Model (43 of 56)Constraints (11 of 12)
Q: Is this subclassing? Similarity? Difference?
ER Model (44 of 56)Constraints (12 of 12)
UniversityTeam affiliation
numbersport name
)
Design Principles
ER Model (45 of 56)Design Principles (1 of 12)
Design Principles: Be Faithful
ER Model (46 of 56)Design Principles (2 of 12)
Teaches CourseInstructor
Teaches CourseInstructor
Teaches CourseInstructor
• Redundancy occurs when we say the same thing in two different 
ways.
• Redundancy wastes space and (more importantly) encourages 
inconsistency.
• The two instances of the same fact may become inconsistent if we change 
one and forget to change the other, related version.
Avoid Redundancy
ER Model (47 of 56)Design Principles (3 of 12)
Example: Good
ER Model (48 of 56)Design Principles (4 of 12)
Beers ManfsManfBy
name
This design gives the address of each manufacturer exactly once.
name addr
Example: Bad
ER Model (49 of 56)Design Principles (5 of 12)
Beers ManfsManfBy
name
This design states the manufacturer of a beer twice: 
as an attribute and as a related entity.
name
manf
addr
Example: Bad
ER Model (50 of 56)Design Principles (6 of 12)
Beers
name
This design repeats the manufacturer’s address once 
for each beer; loses the address if there are 
temporarily no beers for a manufacturer.
manf manfAddr
• An entity set should satisfy at least one of the following conditions:
• It is more than the name of something; it has at least one non-key 
attribute.
• It is the “many” in a many-one or many-many relationship.
Entity Sets vs. Attributes
ER Model (51 of 56)Design Principles (7 of 12)
Example: Good
ER Model (52 of 56)Design Principles (8 of 12)
Beers ManfsManfBy
name name addr
• Manfs deserves to be an entity set because of the 
non-key attribute addr.
• Beers deserves to be an entity set because it is  the 
“many” of the many-one relationship ManfBy.
Example: Good
ER Model (53 of 56)Design Principles (9 of 12)
Beers
name manf
There is no need to make the manufacturer an entity set, because we 
record nothing about manufacturers besides their name. 
Example: Bad
ER Model (54 of 56)Design Principles (10 of 12)
Beers ManfsManfBy
name name
Since the manufacturer is nothing but a name, and is not at the 
“many” end of any relationship, it should not be an entity set.
• Beginning db designers often doubt that anything could be a key by 
itself.
• They make all entity sets weak, supported by all other entity sets to which 
they are linked.
• In reality, we usually create unique ID’s for entity sets.
• Examples include social-security numbers, automobile VIN’s etc.
Don’t Overuse Weak Entity Sets
ER Model (55 of 56)Design Principles (11 of 12)
• The usual reason is that there is no global authority capable of 
creating unique ID’s.
• Example: it is unlikely that there could be an agreement to assign 
unique player numbers across all football teams in the world.
When Do We Need Weak Entity Sets?
ER Model (56 of 56)Design Principles (12 of 12)
